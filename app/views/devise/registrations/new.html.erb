<h2>Sign up</h2>

<%= form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
  <%= devise_error_messages! %>

  <div class="field">
    <%= f.label :username %><br />
    <%= f.text_field :username %>
    <span id = "usernameError"></span>
  </div>
   <div class="field">
    <%= f.label :email %><br />
    <%= f.email_field :email%>
    <span id = "emailError"></span>
  </div>
 <div class="field">
    <%= f.label :mobile %><br />
    <%= f.text_field :mobile %>
    <span id = "mobileError"></span>
  </div>
   <div class="field">
    <%= f.label :gender %><br />
    <%= f.radio_button :gender, "male" %> Male
    <%= f.radio_button :gender, "female" %> Female
  </div>
  <div class="field">
    <%= f.label :date_of_birth %><br />
    <%= f.date_field :dob %>
    <span id = "dateofbirthError"></span>
  </div>

  <div class="field">
    <%= f.label :password %>
    <% if @minimum_password_length %>
    <em>(<%= @minimum_password_length %> characters minimum)</em>
    <% end %><br />
    <%= f.password_field :password, autocomplete: "off" %>
    <span id = "passwordError"></span>
  </div>

  <div class="field">
    <%= f.label :password_confirmation %><br />
    <%= f.password_field :password_confirmation, autocomplete: "off" %>
    <span id = "passwordConfirmationError"></span>
  </div>

  <script>
    var alphabetFormatter = /[A-Za-z]/;
    var emailFormatter = /\S+@\S+\.\S+/;
    var mobileFormatter =  /^[0-9]+$/;
    var passwordFormatter  = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{6,}$/;
  

    var usernameHandle = document.getElementById('user_username');
    var emailHandle = document.getElementById('user_email');
    var mobileHandle = document.getElementById('user_mobile');
    var maleHandle = document.getElementById('user_gender_male');
    var femaleHandle = document.getElementById('user_gender_female');
    var passwordHandle = document.getElementById('user_password');
    var passwordConfirmationHandle = document.getElementById('user_password_confirmation');
    var dobHandle = document.getElementById('user_dob');

    var usernameErrorHandle = document.getElementById('usernameError');
    var emailErrorHandle = document.getElementById('emailError');
    var mobileErrorHandle = document.getElementById('mobileError');
    var passwordErrorHandle = document.getElementById('passwordError');
    var passwordConfirmationErrorHandle = document.getElementById('passwordConfirmationError');
    var dateofbirthErrorHandle = document.getElementById('dateofbirthError');
// AJAX FUNCTIONS
function determineGender(name){
  var xhr = new XMLHttpRequest();
  xhr.open('GET', 'https://gender-api.com/get?name='+name+'&key=pRPLCejozFwCHFbVCR', true);
  xhr.onreadystatechange = function(){
          if(xhr.readyState === 4 && xhr.status === 200){
            var result = JSON.parse(xhr.responseText);
            if(result.gender === "male"){
              maleHandle.checked = true;
            } else if(result.gender === "female"){
              femaleHandle.checked = true;
            }
            else{
              maleHandle.checked = false;
              femaleHandle.checked = false;
            }
          }
        }
    xhr.send();
}

 function check_email_taken(email){
  var isTaken = false;
  var xhr = new XMLHttpRequest();
  xhr.open('GET', "/ajax_calls/check_email_taken?email="+email, false);
xhr.onreadystatechange = function(){
  if(xhr.readyState === 4 && xhr.status === 200){
    var response = JSON.parse(xhr.responseText);
    if(response.user_taken){
      isTaken = true;
    }
  }
}

  xhr.send();
  return isTaken;

 }

      function resetErrorMsg(errorField){
        errorField.innerHTML ="";
      }


    usernameHandle.addEventListener('blur',function(){
      if(usernameHandle.value === ""){
        usernameErrorHandle.innerHTML = "Can't be blank";
      } else if(!alphabetFormatter.test(usernameHandle.value)){
        usernameHandle.innerHTML = "Should be only alphabets";
      } else if( usernameHandle.value.length < 3){
        usernameErrorHandle.innerHTML = "Should contain minimum 6 characters"
      }else {
        resetErrorMsg(usernameErrorHandle);
        determineGender(usernameHandle.value);
      }
    },false);

    emailHandle.addEventListener('blur', function(){
      if(emailHandle.value == ""){
        emailErrorHandle.innerHTML = "Can't be blank";
      }else if(!emailFormatter.test(emailHandle.value)){
        emailErrorHandle.innerHTML = "Should be valid format";
      }else if(check_email_taken(emailHandle.value)){
        emailErrorHandle.innerHTML = "email already taken"
      }else{
        resetErrorMsg(emailErrorHandle);
      }
    },false);

    mobileHandle.addEventListener('blur', function(){
      if(mobileHandle.value == ""){
        mobileErrorHandle.innerHTML = "Can't be blank";
      }else if(!mobileFormatter.test(mobileHandle.value)){
        mobileErrorHandle.innerHTML = "Should be valid format";
      }else if(mobileHandle.value.length !== 10){
        mobileErrorHandle.innerHTML = "Should be 10 digits"
      } else{
        resetErrorMsg(mobileErrorHandle);
      }
    },false);
    passwordHandle.addEventListener('blur', function(){
      if(passwordHandle.value == ""){
        passwordErrorHandle.innerHTML = "Can't be blank";
      }else if(!passwordFormatter.test(passwordHandle.value)){
        passwordErrorHandle.innerHTML = "Ensure you have 1 upper case, 1 lower case and 1 number";
      }else if(passwordHandle.value.length < 6){
        passwordErrorHandle.innerHTML = "Should be minimum 6 characters"
      } else{
        resetErrorMsg(passwordErrorHandle);
      }
    },false);
    passwordHandle.addEventListener('mouseover', function(){
      passwordHandle.type = "text";
    },false);
    passwordHandle.addEventListener('mouseout', function(){
      passwordHandle.type = "password";
    },false);

    passwordConfirmationHandle.addEventListener('blur', function(){
      if(passwordConfirmationHandle.value == ""){
        passwordConfirmationErrorHandle.innerHTML = "Can't be blank";
      }else if(passwordHandle.value !== passwordConfirmationHandle.value){
        passwordConfirmationErrorHandle.innerHTML = "password doesn't match";
      } else{
        resetErrorMsg(passwordConfirmationErrorHandle);
      }
    },false);

    usernameHandle.addEventListener('focus', function(){
     usernameErrorHandle.innerHTML = 'Enter your first name';
    },false);
      dobHandle.addEventListener('blur', function(){
        var today = new Date();
        var newDate = (dobHandle.value)
        console.log(today.getFullYear())
        console.log(newDate)
      if(dobHandle.value == "" || dobHandle.value == undefined){
        dateofbirthErrorHandle.innerHTML = "Can't be blank";
        // console.log(today.getFullYear())
        // console.log(newDate)
      }else if(((today.getFullYear() - newDate) < 18)){
        dateofbirthErrorHandle.innerHTML = "Can't register under 18";
      } else{
        resetErrorMsg(dateofbirthErrorHandle);
      }
    },false);
  </script>


  <div class="actions">
    <%= f.submit "Sign up" %>
  </div>
<% end %>

<%= render "devise/shared/links" %>
